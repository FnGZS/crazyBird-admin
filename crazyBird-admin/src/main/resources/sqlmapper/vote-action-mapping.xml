<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.admin.dao.vote.VoteDao">
	<resultMap id="BaseResultMap"
		type="com.admin.dao.vote.dataobject.VoteActionDO">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="action_name" property="actionName"
			jdbcType="VARCHAR" />
		<result column="action_introduce" property="actionIntro"
			jdbcType="VARCHAR" />
		<result column="vote_ruler" property="voteRuler"
			jdbcType="VARCHAR" />
		<result column="host" property="host" jdbcType="VARCHAR" />
		<result column="action_image" property="actionImage"
			jdbcType="VARCHAR" />
		<result column="telephone" property="telephone"
			jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="visit_num" property="visitNum"
			jdbcType="BIGINT" />
		<result column="vote_max" property="voteMax"
			jdbcType="INTEGER" />
		<result column="vote_min" property="voteMin"
			jdbcType="INTEGER" />
		<result column="vote_sum" property="voteSum" jdbcType="BIGINT" />
		<result column="start_time" property="startTime"
			jdbcType="TIMESTAMP" />
		<result column="end_time" property="endTime"
			jdbcType="TIMESTAMP" />
		<result column="gmt_created" property="gmtCreated"
			jdbcType="TIMESTAMP" />
		<result column="gmt_modified" property="gmtModified"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="VoteHotMap"
		type="com.admin.dao.vote.dataobject.VoteActionHotDTO">
		<id column="id" property="reId" jdbcType="BIGINT" />
		<result column="type" property="type"
			jdbcType="INTEGER" />
		<result column="action_id" property="id"
			jdbcType="BIGINT" />
		<result column="action_name" property="actionName"
			jdbcType="VARCHAR" />
		<result column="action_introduce" property="actionIntro"
			jdbcType="VARCHAR" />
		<result column="vote_ruler" property="voteRuler"
			jdbcType="VARCHAR" />
		<result column="host" property="host" jdbcType="VARCHAR" />
		<result column="action_image" property="actionImage"
			jdbcType="VARCHAR" />
		<result column="telephone" property="telephone"
			jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="visit_num" property="visitNum"
			jdbcType="BIGINT" />
		<result column="vote_max" property="voteMax"
			jdbcType="INTEGER" />
		<result column="vote_min" property="voteMin"
			jdbcType="INTEGER" />
		<result column="vote_sum" property="voteSum" jdbcType="BIGINT" />
		<result column="start_time" property="startTime"
			jdbcType="TIMESTAMP" />
		<result column="end_time" property="endTime"
			jdbcType="TIMESTAMP" />
		<result column="gmt_created" property="gmtCreated"
			jdbcType="TIMESTAMP" />
		<result column="gmt_modified" property="gmtModified"
			jdbcType="TIMESTAMP" />
	</resultMap>
		<resultMap id="VoteActionSlideMap"
		type="com.admin.dao.vote.dataobject.VoteActionSlideDO">
		<result column="gmt_created" property="gmtCreated"
			jdbcType="TIMESTAMP" />
		<result column="gmt_modified" property="gmtModified"
			jdbcType="TIMESTAMP" />
		<result column="id" property="id"
			jdbcType="INTEGER" />
		<result column="action_id" property="actionId"
			jdbcType="BIGINT" />
		<result column="picture" property="picUrl"
			jdbcType="VARCHAR" />
		</resultMap>
	<resultMap id="VoteActionOffLineMap"
		type="com.admin.dao.vote.dataobject.VoteListOffLineDO">
		<result column="id" property="id"
			jdbcType="INTEGER" />
		<result column="num" property="num"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, action_name, action_introduce,vote_min,vote_max, vote_ruler, host, action_image,
		telephone, status, visit_num,vote_sum, start_time, end_time,gmt_created,gmt_modified
	</sql>
	<select id="getVoteActionlist" resultMap="BaseResultMap"
		parameterType="com.admin.dao.vote.dataobject.VoteActionPO">
		select
		<include refid="Base_Column_List" />
		from vote_action 
		<if test="status != null">
		where 
		`status`= #{status,jdbcType=INTEGER}
		</if>
		
		order by start_time desc
		limit #{startPos,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</select>
	<select id="getVoteActionCount" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select
		count(1)
		from vote_action 
		<if test="status != null">
		where `status`= #{status,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="getVoteAction" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
	<include refid="Base_Column_List" />
		from vote_action where id=#{id,jdbcType=BIGINT}
	</select>
	<select id="getVoteActionHotList" resultMap="VoteHotMap">
		select vr.id,vr.action_id,vr.type,va.action_name,va.action_image,va.action_introduce,va.end_time,
		va.start_time,va.`status`,va.gmt_created,va.gmt_modified,va.`host`,va.telephone,va.visit_num,
		va.vote_max,va.vote_min,va.vote_ruler,va.vote_sum 
		from vote_recommend vr 
		LEFT JOIN vote_action va on vr.action_id=va.id 
		where va.id = vr.action_id
	</select>

	<select id="getVoteActionSlide" resultMap="VoteActionSlideMap" >
		select id,gmt_created,gmt_modified, action_id,picture from vote_slide 
	</select>
	
	<select id="getSum" resultMap="VoteActionOffLineMap">
	select id,num from vote_offline
	</select>
	<select id = "checkCode" resultType="java.lang.Integer" parameterType="java.lang.String">
	select is_use from code where `code`= #{code,jdbcType=VARCHAR}
	</select>
	<select id = "checkCodeIsNull" resultType="java.lang.Integer" parameterType="java.lang.String">
	select count(1) from code where `code`= #{code,jdbcType=VARCHAR}
	</select>
	<delete id="deleteCode" >
	delete from code
	</delete>
	<insert id="insertCode" parameterType="java.lang.String">
	insert into code (`code`) VALUES (#{code,jdbcType=VARCHAR})
	</insert>
	<update id ="updateCode" parameterType="java.lang.String">
		update code set is_use = 1 where `code`=#{code,jdbcType=VARCHAR}
	</update>
	
	
	<select id = "checkTeacherCode" resultType="java.lang.Integer" parameterType="java.lang.String">
	select is_use from code_teacher where `code`= #{code,jdbcType=VARCHAR}
	</select>
	<select id = "checkTeacherCodeIsNull" resultType="java.lang.Integer" parameterType="java.lang.String">
	select count(1) from code_teacher where `code`= #{code,jdbcType=VARCHAR}
	</select>
	<delete id="deleteTeacherCode" >
	delete from code_teacher
	</delete>
	<insert id="insertTeacherCode" parameterType="java.lang.String">
	insert into code_teacher (`code`) VALUES (#{code,jdbcType=VARCHAR})
	</insert>
	<update id ="updateTeacherCode" parameterType="java.lang.String">
		update code_teacher set is_use = 1 where `code`=#{code,jdbcType=VARCHAR}
	</update>
	
	<update id="updateVoteActionNum" parameterType="java.lang.Long">
		update vote_action set visit_num=visit_num+1
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateVoteActionSum"
		parameterType="com.admin.dao.vote.dataobject.VoteRecordDO">
		update vote_action set vote_sum =(SELECT SUM(num) from vote_action_detail where action_id= #{actionId,jdbcType=BIGINT}) where id=#{actionId,jdbcType=BIGINT}
	</update>
	<update id="updateVoteActionSlide" parameterType="com.admin.dao.vote.dataobject.VoteActionSlideDO">
	update vote_slide 
	<set>
	<if test="picUrl !=null">
	action_id=#{actionId,jdbcType=BIGINT},
	</if>
	<if test="picUrl !=null">
	picture=#{picUrl,jdbcType=VARCHAR},
	</if>
	
	
	gmt_created=now(),
	gmt_modified=now()
	</set>
	where id= #{id,jdbcType=INTEGER}
	</update>
	<update id="updateVoteAction" parameterType="com.admin.dao.vote.dataobject.VoteActionDO">
	update vote_action 
	<set>
	<if test="actionName != null">
	action_name=#{actionName,jdbcType=VARCHAR},
	</if>
	<if test="actionIntro != null">
		action_introduce=#{actionIntro,jdbcType=VARCHAR},
	</if>
	<if test="voteRuler != null">
	vote_ruler=#{voteRuler,jdbcType=VARCHAR},
	</if>
	<if test="host != null">
		host=#{host,jdbcType=VARCHAR},
	</if>
	<if test="actionImage != null">
		action_image=#{actionImage,jdbcType=VARCHAR},
	</if>
	<if test="telephone != null">
		telephone=#{telephone,jdbcType=VARCHAR},
	</if>
	<if test="status != null">
		`status`=#{status,jdbcType=INTEGER},
	</if>
	<if test="visitNum != null">
		visit_num=#{visitNum,jdbcType=BIGINT},
	</if>
	<if test="voteSum != null">
		vote_sum=#{voteSum,jdbcType=BIGINT},
	</if>
	<if test="voteMax != null">
		vote_max=#{voteMax,jdbcType=INTEGER},
	</if>
	<if test="voteMin != null">
		vote_min=#{voteMin,jdbcType=INTEGER},
	</if>
	<if test="startTime != null">
		start_time=#{startTime,jdbcType=TIMESTAMP},
	</if>
	<if test="endTime != null">
		end_time=#{endTime,jdbcType=TIMESTAMP},
	</if>
	gmt_created=now(),
	gmt_modified=now()
	</set>
	where id=#{id,jdbcType=BIGINT}
	</update>
	<insert  id="addVoteActionSlide" parameterType="com.admin.dao.vote.dataobject.VoteActionSlideDO">
	insert into vote_slide
	(
	id,
	picture,
	gmt_created,
	gmt_modified,
	action_id
	)
	values
	(
	#{id,jdbcType=INTEGER},

	#{picUrl,jdbcType=VARCHAR},
	now(),
	now(),
	#{actionId,jdbcType=BIGINT}
	)
	</insert>
	<insert id="insertVoteAction" parameterType="com.admin.dao.vote.dataobject.VoteActionDO">
	insert into vote_action 
	(
	id,
	action_name,
	action_introduce,
	vote_ruler,
	host,
	action_image,
	telephone,
	`status`,
	visit_num,
	vote_sum,
	vote_max,
	vote_min,
	start_time,
	end_time,
	gmt_created,
	gmt_modified
	)
	values
	(
	#{id,jdbcType=BIGINT},
	#{actionName,jdbcType=VARCHAR},
	#{actionIntro,jdbcType=VARCHAR},
	#{voteRuler,jdbcType=VARCHAR},
	#{host,jdbcType=VARCHAR},
	#{actionImage,jdbcType=VARCHAR},
	#{telephone,jdbcType=VARCHAR},
	#{status,jdbcType=INTEGER},
	#{visitNum,jdbcType=BIGINT},
	#{voteSum,jdbcType=BIGINT},
	#{voteMax,jdbcType=INTEGER},
	#{voteMin,jdbcType=INTEGER},	
	#{startTime,jdbcType=TIMESTAMP},
	#{endTime,jdbcType=TIMESTAMP},
	now(),
	now()
	)
	</insert>
	<delete id="deleteVoteAction" parameterType="java.lang.Long">
	delete from vote_action where id=#{id,jdbcType=BIGINT}
	</delete>
	<delete  id ="deleteVoteActionSlide" parameterType="java.lang.Integer" >
	delete from vote_slide where id =#{id,jdbcType=INTEGER}
	</delete>
	<update id="createVote"
		parameterType="ArrayList">
			update vote_offline
			<set>
				num=num+1
			</set>
			where id in
			<foreach collection="list" item="id" index="index" open="(" close=")" separator=","> 
			#{id,jdbcType=BIGINT} 
		</foreach>
	</update>
</mapper>